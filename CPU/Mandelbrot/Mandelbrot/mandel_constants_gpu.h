#pragma once
#include <cuda_runtime.h>
#include <fstream>
#include "pfc_types.h"

// Image Data
auto constexpr WIDTH{ 8192 };
auto constexpr HEIGHT{ 4608 };
auto constexpr PIXEL_PER_IMAGE{ WIDTH * HEIGHT }; // 37.748.736

auto constexpr CPU_PARALLEL_SIZE{ 20 };

auto constexpr NO_OF_IMAGES{200};

// Run Config
auto constexpr ITERATIONS{ 128 };

__device__
auto const START_ITERATION{ ITERATIONS - 1 };
__device__
auto const BORDER{ 4.0f };

// precalculated values
__device__
float const CX_MIN[] = { -2.64529f, -2.55029f, -2.46004f, -2.3743f, -2.29285f, -2.21547f, -2.14196f, -2.07213f, -2.00579f, -1.94276f, -1.88289f, -1.82601f, -1.77197f, -1.72064f, -1.67187f, -1.62554f, -1.58153f, -1.53972f, -1.5f, -1.46226f, -1.42641f, -1.39236f, -1.36f, -1.32927f, -1.30007f, -1.27233f, -1.24598f, -1.22094f, -1.19716f, -1.17457f, -1.1531f, -1.13271f, -1.11334f, -1.09494f, -1.07746f, -1.06085f, -1.04507f, -1.03008f, -1.01584f, -1.00231f, -0.989462f, -0.977254f, -0.965656f, -0.954638f, -0.94417f, -0.934226f, -0.92478f, -0.915805f, -0.907279f, -0.89918f, -0.891485f, -0.884176f, -0.877231f, -0.870634f, -0.864367f, -0.858413f, -0.852757f, -0.847384f, -0.842279f, -0.83743f, -0.832823f, -0.828446f, -0.824288f, -0.820338f, -0.816586f, -0.813021f, -0.809634f, -0.806417f, -0.803361f, -0.800457f, -0.797699f, -0.795079f, -0.792589f, -0.790224f, -0.787977f, -0.785843f, -0.783815f, -0.781889f, -0.780059f, -0.778321f, -0.776669f, -0.7751f, -0.77361f, -0.772194f, -0.770849f, -0.769571f, -0.768357f, -0.767203f, -0.766108f, -0.765067f, -0.764078f, -0.763138f, -0.762246f, -0.761398f, -0.760593f, -0.759828f, -0.759101f, -0.75841f, -0.757754f, -0.757131f, -0.756539f, -0.755976f, -0.755442f, -0.754935f, -0.754452f, -0.753994f, -0.753559f, -0.753146f, -0.752753f, -0.75238f, -0.752025f, -0.751688f, -0.751368f, -0.751065f, -0.750776f, -0.750502f, -0.750241f, -0.749993f, -0.749758f, -0.749535f, -0.749323f, -0.749121f, -0.748929f, -0.748747f, -0.748575f, -0.74841f, -0.748254f, -0.748106f, -0.747965f, -0.747832f, -0.747704f, -0.747584f, -0.747469f, -0.74736f, -0.747257f, -0.747158f, -0.747065f, -0.746976f, -0.746892f, -0.746812f, -0.746736f, -0.746663f, -0.746595f, -0.746529f, -0.746467f, -0.746409f, -0.746353f, -0.7463f, -0.746249f, -0.746201f, -0.746156f, -0.746112f, -0.746071f, -0.746032f, -0.745995f, -0.74596f, -0.745926f, -0.745894f, -0.745864f, -0.745835f, -0.745808f, -0.745782f, -0.745758f, -0.745734f, -0.745712f, -0.745691f, -0.745671f, -0.745652f, -0.745634f, -0.745617f, -0.7456f, -0.745585f, -0.74557f, -0.745556f, -0.745543f, -0.74553f, -0.745518f, -0.745507f, -0.745496f, -0.745486f, -0.745476f, -0.745466f, -0.745458f, -0.745449f, -0.745441f, -0.745434f, -0.745427f, -0.74542f, -0.745413f, -0.745407f, -0.745401f, -0.745396f, -0.74539f, -0.745385f, -0.745381f, -0.745376f, -0.745372f, -0.745368f, -0.745364f, -0.74536f };
__device__
float const CY_MIN[] = { -0.955675f, -0.902237f, -0.851472f, -0.803244f, -0.757429f, -0.713903f, -0.672554f, -0.633273f, -0.595955f, -0.560504f, -0.526825f, -0.49483f, -0.464435f, -0.435559f, -0.408127f, -0.382068f, -0.35731f, -0.333791f, -0.311447f, -0.290222f, -0.270057f, -0.2509f, -0.232702f, -0.215413f, -0.198988f, -0.183385f, -0.168562f, -0.15448f, -0.141102f, -0.128394f, -0.11632f, -0.10485f, -0.0939543f, -0.0836031f, -0.0737684f, -0.0644264f, -0.0555512f, -0.0471205f, -0.0391105f, -0.031501f, -0.0242718f, -0.0174047f, -0.0108809f, -0.00468324f, 0.00120477f, 0.00679828f, 0.0121121f, 0.0171603f, 0.021956f, 0.026512f, 0.0308401f, 0.0349519f, 0.038858f, 0.0425689f, 0.0460942f, 0.0494432f, 0.0526248f, 0.0556474f, 0.0585187f, 0.0612465f, 0.0638379f, 0.0662998f, 0.0686385f, 0.0708604f, 0.0729711f, 0.0749763f, 0.0768813f, 0.078691f, 0.0804102f, 0.0820433f, 0.0835949f, 0.0850689f, 0.0864693f, 0.0877995f, 0.0890633f, 0.0902639f, 0.0914045f, 0.092488f, 0.0935173f, 0.0944952f, 0.0954242f, 0.0963068f, 0.0971451f, 0.0979416f, 0.0986983f, 0.0994172f, 0.1001f, 0.100749f, 0.101365f, 0.101951f, 0.102507f, 0.103035f, 0.103537f, 0.104014f, 0.104467f, 0.104898f, 0.105306f, 0.105695f, 0.106064f, 0.106414f, 0.106747f, 0.107064f, 0.107364f, 0.10765f, 0.107921f, 0.108179f, 0.108424f, 0.108656f, 0.108877f, 0.109087f, 0.109286f, 0.109476f, 0.109656f, 0.109827f, 0.109989f, 0.110143f, 0.11029f, 0.110429f, 0.110562f, 0.110687f, 0.110807f, 0.11092f, 0.111028f, 0.11113f, 0.111227f, 0.11132f, 0.111408f, 0.111491f, 0.11157f, 0.111645f, 0.111717f, 0.111785f, 0.111849f, 0.111911f, 0.111969f, 0.112024f, 0.112077f, 0.112127f, 0.112174f, 0.112219f, 0.112262f, 0.112302f, 0.112341f, 0.112378f, 0.112413f, 0.112446f, 0.112477f, 0.112507f, 0.112536f, 0.112563f, 0.112588f, 0.112612f, 0.112636f, 0.112658f, 0.112678f, 0.112698f, 0.112717f, 0.112735f, 0.112752f, 0.112768f, 0.112783f, 0.112798f, 0.112812f, 0.112825f, 0.112838f, 0.112849f, 0.112861f, 0.112871f, 0.112882f, 0.112891f, 0.1129f, 0.112909f, 0.112917f, 0.112925f, 0.112933f, 0.11294f, 0.112947f, 0.112953f, 0.112959f, 0.112965f, 0.112971f, 0.112976f, 0.112981f, 0.112985f, 0.11299f, 0.112994f, 0.112998f, 0.113002f, 0.113006f, 0.113009f, 0.113012f, 0.113016f, 0.113019f, 0.113021f, 0.113024f, 0.113027f, 0.113029f, 0.113031f, 0.113033f, 0.113036f };
__device__
pfc::byte_t const COLORS[] = { 

0, 252, 250, 248, 246, 244, 242, 240, 238, 236, 234, 232, 230, 228, 226, 224, 222, 220, 218, 216, 214, 212, 210, 208, 206, 204, 202, 200, 198, 196, 194, 192, 190, 188, 186, 184, 182, 180, 178, 176, 174, 172, 170, 168, 166, 164, 162, 160, 158, 156, 154, 152, 150, 148, 146, 144, 142, 140, 138, 136, 134, 132, 130, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2

};
__device__
float const X_FACTORS[] = { 0.000463924f, 0.000440728f, 0.000418691f, 0.000397756f, 0.000377869f, 0.000358975f, 0.000341026f, 0.000323975f, 0.000307777f, 0.000292387f, 0.000277768f, 0.00026388f, 0.000250685f, 0.000238152f, 0.000226244f, 0.000214932f, 0.000204185f, 0.000193976f, 0.000184277f, 0.000175063f, 0.00016631f, 0.000157995f, 0.000150094f, 0.00014259f, 0.000135461f, 0.000128688f, 0.000122253f, 0.00011614f, 0.000110333f, 0.000104817f, 9.95756e-05f, 9.45968e-05f, 8.98672e-05f, 8.53742e-05f, 8.11056e-05f, 7.70502e-05f, 7.31974e-05f, 6.95375e-05f, 6.60606e-05f, 6.27572e-05f, 5.96196e-05f, 5.66387e-05f, 5.38069e-05f, 5.11166e-05f, 4.85606e-05f, 4.61326e-05f, 4.38262e-05f, 4.16347e-05f, 3.95529e-05f, 3.75754e-05f, 3.56965e-05f, 3.39119e-05f, 3.22161e-05f, 3.06053e-05f, 2.90751e-05f, 2.76213e-05f, 2.62403e-05f, 2.49283e-05f, 2.36818e-05f, 2.24979e-05f, 2.1373e-05f, 2.03042e-05f, 1.9289e-05f, 1.83245e-05f, 1.74084e-05f, 1.65379e-05f, 1.57109e-05f, 1.49254e-05f, 1.41792e-05f, 1.34701e-05f, 1.27967e-05f, 1.2157e-05f, 1.1549e-05f, 1.09716e-05f, 1.04229e-05f, 9.90184e-06f, 9.40667e-06f, 8.9364e-06f, 8.48956e-06f, 8.0652e-06f, 7.66183e-06f, 7.27872e-06f, 6.9149e-06f, 6.56917e-06f, 6.24075e-06f, 5.9287e-06f, 5.63228e-06f, 5.3505e-06f, 5.08314e-06f, 4.82896e-06f, 4.58748e-06f, 4.35807e-06f, 4.14015e-06f, 3.9331e-06f, 3.73654e-06f, 3.54975e-06f, 3.37224e-06f, 3.20352e-06f, 3.04334e-06f, 2.89122e-06f, 2.74667e-06f, 2.60933e-06f, 2.47882e-06f, 2.35503e-06f, 2.23709e-06f, 2.12526e-06f, 2.01904e-06f, 1.9182e-06f, 1.82225e-06f, 1.73117e-06f, 1.64449e-06f, 1.5622e-06f, 1.48419e-06f, 1.41009e-06f, 1.33951e-06f, 1.27262e-06f, 1.20889e-06f, 1.14834e-06f, 1.09095e-06f, 1.03651e-06f, 9.84739e-07f, 9.35417e-07f, 8.88539e-07f, 8.44216e-07f, 8.02098e-07f, 7.61813e-07f, 7.23719e-07f, 6.87582e-07f, 6.53155e-07f, 6.20679e-07f, 5.89432e-07f, 5.60128e-07f, 5.32047e-07f, 5.05435e-07f, 4.80279e-07f, 4.56113e-07f, 4.33402e-07f, 4.11673e-07f, 3.9116e-07f, 3.71629e-07f, 3.53073e-07f, 3.35244e-07f, 3.18646e-07f, 3.02528e-07f, 2.87508e-07f, 2.73224e-07f, 2.59551e-07f, 2.46612e-07f, 2.34162e-07f, 2.22439e-07f, 2.11451e-07f, 2.0071e-07f, 1.90697e-07f, 1.81172e-07f, 1.72141e-07f, 1.63591e-07f, 1.55295e-07f, 1.4748e-07f, 1.40152e-07f, 1.33195e-07f, 1.26479e-07f, 1.20133e-07f, 1.14268e-07f, 1.0841e-07f, 1.0304e-07f, 9.791e-08f, 9.30272e-08f, 8.83919e-08f, 8.39966e-08f, 7.98416e-08f, 7.56937e-08f, 7.20335e-08f, 6.8366e-08f, 6.49459e-08f, 6.17731e-08f, 5.86004e-08f, 5.56751e-08f, 5.29827e-08f, 5.02976e-08f, 4.78598e-08f, 4.54148e-08f, 4.30935e-08f, 4.10196e-08f, 3.8822e-08f, 3.68718e-08f, 3.51617e-08f, 3.34517e-08f, 3.17416e-08f, 3.00315e-08f, 2.85689e-08f, 2.71063e-08f, 2.58837e-08f, 2.44138e-08f, 2.31986e-08f, 2.22162e-08f, 2.1001e-08f, 2.00186e-08f, 1.90435e-08f, 1.80684e-08f, 1.70933e-08f };
__device__
float const Y_FACTORS[] = { 0.000463969f, 0.00044077f, 0.000418731f, 0.000397793f, 0.000377905f, 0.00035901f, 0.000341059f, 0.000324006f, 0.000307806f, 0.000292415f, 0.000277795f, 0.000263905f, 0.00025071f, 0.000238174f, 0.000226265f, 0.000214952f, 0.000204204f, 0.000193994f, 0.000184294f, 0.00017508f, 0.000166326f, 0.00015801f, 0.000150109f, 0.000142604f, 0.000135473f, 0.0001287f, 0.000122265f, 0.000116152f, 0.000110344f, 0.000104827f, 9.95854e-05f, 9.4606e-05f, 8.98759e-05f, 8.53823e-05f, 8.11127e-05f, 7.70572e-05f, 7.32043e-05f, 6.95443e-05f, 6.60672e-05f, 6.27636e-05f, 5.96253e-05f, 5.66442e-05f, 5.3812e-05f, 5.11214e-05f, 4.85653e-05f, 4.61371e-05f, 4.38302e-05f, 4.16387e-05f, 3.95568e-05f, 3.75789e-05f, 3.57e-05f, 3.39149e-05f, 3.22192e-05f, 3.06082e-05f, 2.90779e-05f, 2.7624e-05f, 2.62427e-05f, 2.49307e-05f, 2.3684e-05f, 2.25e-05f, 2.13749e-05f, 2.03061e-05f, 1.92908e-05f, 1.83264e-05f, 1.741e-05f, 1.65395e-05f, 1.57125e-05f, 1.49269e-05f, 1.41806e-05f, 1.34716e-05f, 1.27979e-05f, 1.2158e-05f, 1.15502e-05f, 1.09725e-05f, 1.04241e-05f, 9.90278e-06f, 9.40775e-06f, 8.93727e-06f, 8.49049e-06f, 8.06594e-06f, 7.66264e-06f, 7.2794e-06f, 6.91554e-06f, 6.56965e-06f, 6.24131e-06f, 5.9292e-06f, 5.63273e-06f, 5.35099e-06f, 5.08357e-06f, 4.82917e-06f, 4.5878e-06f, 4.35858e-06f, 4.14065e-06f, 3.93358e-06f, 3.73692e-06f, 3.54982e-06f, 3.37269e-06f, 3.20382e-06f, 3.04363e-06f, 2.89169e-06f, 2.74712e-06f, 2.60951e-06f, 2.47927e-06f, 2.35511e-06f, 2.23747e-06f, 2.12546e-06f, 2.0191e-06f, 1.91839e-06f, 1.82244e-06f, 1.73128e-06f, 1.64489e-06f, 1.5624e-06f, 1.48426e-06f, 1.41003e-06f, 1.3397e-06f, 1.27285e-06f, 1.20903e-06f, 1.14869e-06f, 1.09095e-06f, 1.03668e-06f, 9.84588e-07f, 9.35534e-07f, 8.88647e-07f, 8.44367e-07f, 8.02258e-07f, 7.61885e-07f, 7.23682e-07f, 6.87648e-07f, 6.53353e-07f, 6.20795e-07f, 5.89537e-07f, 5.60016e-07f, 5.32234e-07f, 5.05318e-07f, 4.80138e-07f, 4.56261e-07f, 4.33254e-07f, 4.11548e-07f, 3.91145e-07f, 3.71609e-07f, 3.52941e-07f, 3.35577e-07f, 3.18645e-07f, 3.02582e-07f, 2.8739e-07f, 2.73063e-07f, 2.59606e-07f, 2.46581e-07f, 2.33992e-07f, 2.22271e-07f, 2.11417e-07f, 2.00997e-07f, 1.90579e-07f, 1.81028e-07f, 1.72347e-07f, 1.63664e-07f, 1.55416e-07f, 1.47601e-07f, 1.40222e-07f, 1.33274e-07f, 1.26763e-07f, 1.20252e-07f, 1.14175e-07f, 1.08531e-07f, 1.02887e-07f, 9.81125e-08f, 9.29018e-08f, 8.85612e-08f, 8.37855e-08f, 7.98782e-08f, 7.59726e-08f, 7.20654e-08f, 6.85916e-08f, 6.51178e-08f, 6.16456e-08f, 5.86068e-08f, 5.55664e-08f, 5.29627e-08f, 5.03589e-08f, 4.77536e-08f, 4.53649e-08f, 4.29779e-08f, 4.08076e-08f, 3.90707e-08f, 3.69003e-08f, 3.51634e-08f, 3.34265e-08f, 3.16896e-08f, 2.99543e-08f, 2.86525e-08f, 2.7349e-08f, 2.56121e-08f, 2.43118e-08f, 2.34418e-08f, 2.21415e-08f, 2.0838e-08f, 1.99696e-08f, 1.91011e-08f, 1.82343e-08f, 1.69308e-08f };

// end header