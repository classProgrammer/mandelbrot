#pragma once
#include <cuda_runtime.h>
#include <fstream>
#include "pfc_types.h"

__device__
auto const WIDTH{ 8192 };
__device__
auto const HEIGHT{ 4608 };
// params
__device__
auto const ITERATIONS{ 100 };
// Point to zoom at
auto constexpr point_x{ -0.745289981f };
auto constexpr point_y{ 0.113075003f };
// from
auto constexpr cx_min_factor{ -2.0f };
auto constexpr cy_min_factor{ -1.125f };
// to
auto constexpr cx_max_factor{ 2.0f };
auto constexpr cy_max_factor{ 1.125f };

// graphics card props and calculation
auto constexpr THREADS{ 1024 };
auto constexpr BLOCKS{ 36864 };
auto constexpr COLOR_FACTOR{ (float)255.0f / ITERATIONS };

auto constexpr AVAILABLE_POWER{ BLOCKS * THREADS };
float constexpr X_FACTORS[] = { 0.000463924, 0.000440728, 0.000418691, 0.000397756, 0.000377869, 0.000358975, 0.000341026, 0.000323975, 0.000307777, 0.000292387, 0.000277768, 0.00026388, 0.000250685, 0.000238152, 0.000226244, 0.000214932, 0.000204185, 0.000193976, 0.000184277, 0.000175063, 0.00016631, 0.000157995, 0.000150094, 0.00014259, 0.000135461, 0.000128688, 0.000122253, 0.00011614, 0.000110333, 0.000104817, 9.95756e-05, 9.45968e-05, 8.98672e-05, 8.53742e-05, 8.11056e-05, 7.70502e-05, 7.31974e-05, 6.95375e-05, 6.60606e-05, 6.27572e-05, 5.96196e-05, 5.66387e-05, 5.38069e-05, 5.11166e-05, 4.85606e-05, 4.61326e-05, 4.38262e-05, 4.16347e-05, 3.95529e-05, 3.75754e-05, 3.56965e-05, 3.39119e-05, 3.22161e-05, 3.06053e-05, 2.90751e-05, 2.76213e-05, 2.62403e-05, 2.49283e-05, 2.36818e-05, 2.24979e-05, 2.1373e-05, 2.03042e-05, 1.9289e-05, 1.83245e-05, 1.74084e-05, 1.65379e-05, 1.57109e-05, 1.49254e-05, 1.41792e-05, 1.34701e-05, 1.27967e-05, 1.2157e-05, 1.1549e-05, 1.09716e-05, 1.04229e-05, 9.90184e-06, 9.40667e-06, 8.9364e-06, 8.48956e-06, 8.0652e-06, 7.66183e-06, 7.27872e-06, 6.9149e-06, 6.56917e-06, 6.24075e-06, 5.9287e-06, 5.63228e-06, 5.3505e-06, 5.08314e-06, 4.82896e-06, 4.58748e-06, 4.35807e-06, 4.14015e-06, 3.9331e-06, 3.73654e-06, 3.54975e-06, 3.37224e-06, 3.20352e-06, 3.04334e-06, 2.89122e-06, 2.74667e-06, 2.60933e-06, 2.47882e-06, 2.35503e-06, 2.23709e-06, 2.12526e-06, 2.01904e-06, 1.9182e-06, 1.82225e-06, 1.73117e-06, 1.64449e-06, 1.5622e-06, 1.48419e-06, 1.41009e-06, 1.33951e-06, 1.27262e-06, 1.20889e-06, 1.14834e-06, 1.09095e-06, 1.03651e-06, 9.84739e-07, 9.35417e-07, 8.88539e-07, 8.44216e-07, 8.02098e-07, 7.61813e-07, 7.23719e-07, 6.87582e-07, 6.53155e-07, 6.20679e-07, 5.89432e-07, 5.60128e-07, 5.32047e-07, 5.05435e-07, 4.80279e-07, 4.56113e-07, 4.33402e-07, 4.11673e-07, 3.9116e-07, 3.71629e-07, 3.53073e-07, 3.35244e-07, 3.18646e-07, 3.02528e-07, 2.87508e-07, 2.73224e-07, 2.59551e-07, 2.46612e-07, 2.34162e-07, 2.22439e-07, 2.11451e-07, 2.0071e-07, 1.90697e-07, 1.81172e-07, 1.72141e-07, 1.63591e-07, 1.55295e-07, 1.4748e-07, 1.40152e-07, 1.33195e-07, 1.26479e-07, 1.20133e-07, 1.14268e-07, 1.0841e-07, 1.0304e-07, 9.791e-08, 9.30272e-08, 8.83919e-08, 8.39966e-08, 7.98416e-08, 7.56937e-08, 7.20335e-08, 6.8366e-08, 6.49459e-08, 6.17731e-08, 5.86004e-08, 5.56751e-08, 5.29827e-08, 5.02976e-08, 4.78598e-08, 4.54148e-08, 4.30935e-08, 4.10196e-08, 3.8822e-08, 3.68718e-08, 3.51617e-08, 3.34517e-08, 3.17416e-08, 3.00315e-08, 2.85689e-08, 2.71063e-08, 2.58837e-08, 2.44138e-08, 2.31986e-08, 2.22162e-08, 2.1001e-08, 2.00186e-08, 1.90435e-08, 1.80684e-08, 1.70933e-08 };
float constexpr Y_FACTORS[] = { 0.000463969, 0.00044077, 0.000418731, 0.000397793, 0.000377905, 0.00035901, 0.000341059, 0.000324006, 0.000307806, 0.000292415, 0.000277795, 0.000263905, 0.00025071, 0.000238174, 0.000226265, 0.000214952, 0.000204204, 0.000193994, 0.000184294, 0.00017508, 0.000166326, 0.00015801, 0.000150109, 0.000142604, 0.000135473, 0.0001287, 0.000122265, 0.000116152, 0.000110344, 0.000104827, 9.95854e-05, 9.4606e-05, 8.98759e-05, 8.53823e-05, 8.11127e-05, 7.70572e-05, 7.32043e-05, 6.95443e-05, 6.60672e-05, 6.27636e-05, 5.96253e-05, 5.66442e-05, 5.3812e-05, 5.11214e-05, 4.85653e-05, 4.61371e-05, 4.38302e-05, 4.16387e-05, 3.95568e-05, 3.75789e-05, 3.57e-05, 3.39149e-05, 3.22192e-05, 3.06082e-05, 2.90779e-05, 2.7624e-05, 2.62427e-05, 2.49307e-05, 2.3684e-05, 2.25e-05, 2.13749e-05, 2.03061e-05, 1.92908e-05, 1.83264e-05, 1.741e-05, 1.65395e-05, 1.57125e-05, 1.49269e-05, 1.41806e-05, 1.34716e-05, 1.27979e-05, 1.2158e-05, 1.15502e-05, 1.09725e-05, 1.04241e-05, 9.90278e-06, 9.40775e-06, 8.93727e-06, 8.49049e-06, 8.06594e-06, 7.66264e-06, 7.2794e-06, 6.91554e-06, 6.56965e-06, 6.24131e-06, 5.9292e-06, 5.63273e-06, 5.35099e-06, 5.08357e-06, 4.82917e-06, 4.5878e-06, 4.35858e-06, 4.14065e-06, 3.93358e-06, 3.73692e-06, 3.54982e-06, 3.37269e-06, 3.20382e-06, 3.04363e-06, 2.89169e-06, 2.74712e-06, 2.60951e-06, 2.47927e-06, 2.35511e-06, 2.23747e-06, 2.12546e-06, 2.0191e-06, 1.91839e-06, 1.82244e-06, 1.73128e-06, 1.64489e-06, 1.5624e-06, 1.48426e-06, 1.41003e-06, 1.3397e-06, 1.27285e-06, 1.20903e-06, 1.14869e-06, 1.09095e-06, 1.03668e-06, 9.84588e-07, 9.35534e-07, 8.88647e-07, 8.44367e-07, 8.02258e-07, 7.61885e-07, 7.23682e-07, 6.87648e-07, 6.53353e-07, 6.20795e-07, 5.89537e-07, 5.60016e-07, 5.32234e-07, 5.05318e-07, 4.80138e-07, 4.56261e-07, 4.33254e-07, 4.11548e-07, 3.91145e-07, 3.71609e-07, 3.52941e-07, 3.35577e-07, 3.18645e-07, 3.02582e-07, 2.8739e-07, 2.73063e-07, 2.59606e-07, 2.46581e-07, 2.33992e-07, 2.22271e-07, 2.11417e-07, 2.00997e-07, 1.90579e-07, 1.81028e-07, 1.72347e-07, 1.63664e-07, 1.55416e-07, 1.47601e-07, 1.40222e-07, 1.33274e-07, 1.26763e-07, 1.20252e-07, 1.14175e-07, 1.08531e-07, 1.02887e-07, 9.81125e-08, 9.29018e-08, 8.85612e-08, 8.37855e-08, 7.98782e-08, 7.59726e-08, 7.20654e-08, 6.85916e-08, 6.51178e-08, 6.16456e-08, 5.86068e-08, 5.55664e-08, 5.29627e-08, 5.03589e-08, 4.77536e-08, 4.53649e-08, 4.29779e-08, 4.08076e-08, 3.90707e-08, 3.69003e-08, 3.51634e-08, 3.34265e-08, 3.16896e-08, 2.99543e-08, 2.86525e-08, 2.7349e-08, 2.56121e-08, 2.43118e-08, 2.34418e-08, 2.21415e-08, 2.0838e-08, 1.99696e-08, 1.91011e-08, 1.82343e-08, 1.69308e-08 };

float constexpr X_MAX_MIN[] = { 3.8, 3.61, 3.4295, 3.25802, 3.09512, 2.94036, 2.79334, 2.65368, 2.521, 2.39494, 2.2752, 2.16144, 2.05336, 1.9507, 1.85316, 1.7605, 1.67248, 1.58886, 1.50942, 1.43394, 1.36224, 1.29414, 1.22942, 1.16796, 1.10956, 1.05408, 1.00138, 0.951304, 0.90374, 0.858558, 0.815624, 0.774842, 0.736102, 0.6993, 0.664336, 0.631118, 0.59956, 0.569582, 0.541102, 0.514044, 0.488344, 0.463928, 0.440732, 0.418696, 0.39776, 0.377872, 0.35898, 0.34103, 0.323978, 0.30778, 0.29239, 0.277772, 0.263882, 0.250688, 0.238154, 0.226246, 0.214934, 0.204188, 0.193978, 0.18428, 0.175066, 0.166312, 0.157996, 0.150096, 0.142592, 0.135462, 0.128688, 0.122254, 0.116142, 0.110334, 0.104818, 0.099578, 0.094598, 0.089868, 0.085374, 0.081106, 0.07705, 0.073198, 0.069538, 0.066062, 0.062758, 0.05962, 0.05664, 0.053808, 0.051118, 0.048562, 0.046134, 0.043826, 0.041636, 0.039554, 0.037576, 0.035697, 0.033912, 0.032216, 0.030606, 0.029076, 0.027622, 0.02624, 0.024928, 0.023682, 0.022498, 0.021373, 0.020304, 0.01929, 0.018324, 0.017408, 0.016538, 0.015712, 0.014926, 0.01418, 0.01347, 0.012796, 0.012157, 0.01155, 0.010972, 0.010424, 0.009902, 0.00940603, 0.00893599, 0.00849003, 0.008066, 0.007662, 0.00727803, 0.00691497, 0.00656998, 0.00624001, 0.00592798, 0.00563198, 0.00534999, 0.00508398, 0.00482804, 0.00458801, 0.00435799, 0.00414002, 0.00393397, 0.00373602, 0.00354999, 0.00337201, 0.00320399, 0.00304401, 0.00289202, 0.00274599, 0.00261003, 0.002478, 0.00235498, 0.00223798, 0.00212598, 0.00202, 0.00191802, 0.00182199, 0.00173199, 0.00164402, 0.001562, 0.00148398, 0.00141001, 0.00133997, 0.00127202, 0.00120801, 0.00114799, 0.001091, 0.00103599, 0.000984013, 0.000935972, 0.00088799, 0.000844002, 0.00080198, 0.000761986, 0.000724018, 0.000688016, 0.000653982, 0.000620008, 0.000590026, 0.000559986, 0.000531971, 0.000505984, 0.000479996, 0.000456035, 0.000433981, 0.000411987, 0.00039202, 0.000371993, 0.000352979, 0.000335991, 0.000317991, 0.000302017, 0.00028801, 0.000274003, 0.000259995, 0.000245988, 0.000234008, 0.000222027, 0.000212014, 0.000199974, 0.00019002, 0.000181973, 0.000172019, 0.000163972, 0.000155985, 0.000147998, 0.000140011 };
float constexpr Y_MAX_MIN[] = { 2.13751, 2.03063, 1.92909, 1.83263, 1.74101, 1.65396, 1.57126, 1.4927, 1.41806, 1.34716, 1.2798, 1.21581, 1.15502, 1.09727, 1.0424, 0.990286, 0.94077, 0.893732, 0.849044, 0.806594, 0.766264, 0.72795, 0.691554, 0.656976, 0.624126, 0.59292, 0.563274, 0.53511, 0.508354, 0.482938, 0.45879, 0.43585, 0.414058, 0.393356, 0.373686, 0.355002, 0.337252, 0.320391, 0.304372, 0.289152, 0.274694, 0.26096, 0.247912, 0.235516, 0.22374, 0.212554, 0.201926, 0.19183, 0.182238, 0.173126, 0.16447, 0.156246, 0.148434, 0.141012, 0.133962, 0.127264, 0.1209, 0.114856, 0.109112, 0.103657, 0.0984741, 0.0935502, 0.0888725, 0.0844296, 0.0802079, 0.0761977, 0.0723877, 0.068768, 0.0653298, 0.0620637, 0.0589601, 0.0560121, 0.0532117, 0.0505505, 0.0480237, 0.0456221, 0.0433415, 0.041174, 0.0391157, 0.0371598, 0.0353018, 0.0335362, 0.0318599, 0.0302664, 0.0287537, 0.0273158, 0.02595, 0.024652, 0.02342, 0.022248, 0.021136, 0.02008, 0.019076, 0.018122, 0.017216, 0.016354, 0.015538, 0.01476, 0.014022, 0.013322, 0.012656, 0.012022, 0.011422, 0.01085, 0.010308, 0.009792, 0.009302, 0.00883801, 0.008396, 0.007976, 0.007578, 0.007198, 0.006838, 0.006496, 0.006172, 0.005864, 0.00557, 0.00529201, 0.00502601, 0.004776, 0.004536, 0.00431, 0.004094, 0.00389, 0.003696, 0.00351001, 0.003334, 0.00316799, 0.00301, 0.00286, 0.002716, 0.00257999, 0.002452, 0.002328, 0.002212, 0.002102, 0.001996, 0.001896, 0.001802, 0.001712, 0.001626, 0.001546, 0.001468, 0.001394, 0.00132401, 0.001258, 0.001196, 0.001136, 0.001078, 0.001024, 0.000974, 0.000925995, 0.000877999, 0.000833996, 0.000794001, 0.000753999, 0.000716001, 0.00068, 0.000646003, 0.000613995, 0.000583999, 0.000554003, 0.000526004, 0.000500001, 0.000473998, 0.000452004, 0.000427999, 0.000408001, 0.000386, 0.000367999, 0.000350006, 0.000332005, 0.000316001, 0.000299998, 0.000284001, 0.000270002, 0.000255994, 0.000243999, 0.000232004, 0.000220001, 0.000208996, 0.000197999, 0.000188001, 0.000179999, 0.00017, 0.000161998, 0.000153996, 0.000145994, 0.000138, 0.000132002, 0.000125997, 0.000117995, 0.000112005, 0.000107996, 0.000102006, 9.60007e-05, 9.19998e-05, 8.79988e-05, 8.40053e-05, 7.80001e-05 };
// Zoom factor per image
constexpr auto ZOOM_FACTOR{ 0.95f };

__device__
auto const PIXEL_PER_IMAGE{ WIDTH * HEIGHT }; // 37.748.736
__device__
float const CX_MAX[] = { 1.15471, 1.05971, 0.96946, 0.883722, 0.802272, 0.724894, 0.651384, 0.58155, 0.515208, 0.452184, 0.39231, 0.33543, 0.281394, 0.23006, 0.181292, 0.134964, 0.09095, 0.049138, 0.00941604, -0.028318, -0.064166, -0.098224, -0.130576, -0.161312, -0.190512, -0.21825, -0.244602, -0.269636, -0.29342, -0.316012, -0.337476, -0.357868, -0.377238, -0.39564, -0.413124, -0.429732, -0.44551, -0.460498, -0.474738, -0.488266, -0.501118, -0.513326, -0.524924, -0.535942, -0.54641, -0.556354, -0.5658, -0.574775, -0.583301, -0.5914, -0.599095, -0.606404, -0.613349, -0.619946, -0.626213, -0.632167, -0.637823, -0.643196, -0.648301, -0.65315, -0.657757, -0.662134, -0.666292, -0.670242, -0.673994, -0.677559, -0.680946, -0.684163, -0.687219, -0.690123, -0.692881, -0.695501, -0.697991, -0.700356, -0.702603, -0.704737, -0.706765, -0.708691, -0.710521, -0.712259, -0.713911, -0.71548, -0.71697, -0.718386, -0.719731, -0.721009, -0.722223, -0.723377, -0.724472, -0.725513, -0.726502, -0.727441, -0.728334, -0.729182, -0.729987, -0.730752, -0.731479, -0.73217, -0.732826, -0.733449, -0.734041, -0.734603, -0.735138, -0.735645, -0.736128, -0.736586, -0.737021, -0.737434, -0.737827, -0.7382, -0.738555, -0.738892, -0.739211, -0.739515, -0.739804, -0.740078, -0.740339, -0.740587, -0.740822, -0.741045, -0.741257, -0.741459, -0.741651, -0.741832, -0.742005, -0.74217, -0.742326, -0.742474, -0.742615, -0.742748, -0.742876, -0.742996, -0.743111, -0.74322, -0.743323, -0.743422, -0.743515, -0.743604, -0.743688, -0.743768, -0.743844, -0.743917, -0.743985, -0.744051, -0.744112, -0.744171, -0.744227, -0.74428, -0.744331, -0.744379, -0.744424, -0.744468, -0.744509, -0.744548, -0.744585, -0.74462, -0.744654, -0.744686, -0.744716, -0.744744, -0.744772, -0.744798, -0.744822, -0.744846, -0.744868, -0.744889, -0.744909, -0.744928, -0.744946, -0.744963, -0.74498, -0.744995, -0.74501, -0.745024, -0.745037, -0.74505, -0.745062, -0.745073, -0.745084, -0.745094, -0.745104, -0.745113, -0.745122, -0.745131, -0.745139, -0.745146, -0.745153, -0.74516, -0.745167, -0.745173, -0.745179, -0.745184, -0.74519, -0.745195, -0.745199, -0.745204, -0.745208, -0.745212, -0.745216, -0.74522 };
__device__
float const CY_MAX[] = { 1.18183, 1.12839, 1.07762, 1.02939, 0.983579, 0.940054, 0.898704, 0.859423, 0.822105, 0.786654, 0.752975, 0.72098, 0.690585, 0.661709, 0.634277, 0.608218, 0.58346, 0.559941, 0.537597, 0.516372, 0.496207, 0.47705, 0.458852, 0.441563, 0.425138, 0.409535, 0.394712, 0.38063, 0.367252, 0.354544, 0.34247, 0.331, 0.320104, 0.309753, 0.299918, 0.290576, 0.281701, 0.27327, 0.265261, 0.257651, 0.250422, 0.243555, 0.237031, 0.230833, 0.224945, 0.219352, 0.214038, 0.20899, 0.204194, 0.199638, 0.19531, 0.191198, 0.187292, 0.183581, 0.180056, 0.176707, 0.173525, 0.170503, 0.167631, 0.164904, 0.162312, 0.15985, 0.157511, 0.15529, 0.153179, 0.151174, 0.149269, 0.147459, 0.14574, 0.144107, 0.142555, 0.141081, 0.139681, 0.13835, 0.137087, 0.135886, 0.134746, 0.133662, 0.132633, 0.131655, 0.130726, 0.129843, 0.129005, 0.128208, 0.127452, 0.126733, 0.12605, 0.125401, 0.124785, 0.124199, 0.123643, 0.123115, 0.122613, 0.122136, 0.121683, 0.121252, 0.120844, 0.120455, 0.120086, 0.119736, 0.119403, 0.119086, 0.118786, 0.1185, 0.118229, 0.117971, 0.117726, 0.117494, 0.117273, 0.117063, 0.116864, 0.116674, 0.116494, 0.116323, 0.116161, 0.116007, 0.11586, 0.115721, 0.115588, 0.115463, 0.115343, 0.11523, 0.115122, 0.11502, 0.114923, 0.11483, 0.114742, 0.114659, 0.11458, 0.114505, 0.114433, 0.114365, 0.114301, 0.114239, 0.114181, 0.114126, 0.114073, 0.114023, 0.113976, 0.113931, 0.113888, 0.113848, 0.113809, 0.113772, 0.113737, 0.113704, 0.113673, 0.113643, 0.113614, 0.113587, 0.113562, 0.113538, 0.113514, 0.113492, 0.113472, 0.113452, 0.113433, 0.113415, 0.113398, 0.113382, 0.113367, 0.113352, 0.113338, 0.113325, 0.113312, 0.113301, 0.113289, 0.113279, 0.113268, 0.113259, 0.11325, 0.113241, 0.113233, 0.113225, 0.113217, 0.11321, 0.113203, 0.113197, 0.113191, 0.113185, 0.11318, 0.113174, 0.113169, 0.113165, 0.11316, 0.113156, 0.113152, 0.113148, 0.113144, 0.113141, 0.113138, 0.113134, 0.113131, 0.113129, 0.113126, 0.113123, 0.113121, 0.113119, 0.113117, 0.113114 };
__device__
float const CX_MIN[] = { -2.64529, -2.55029, -2.46004, -2.3743, -2.29285, -2.21547, -2.14196, -2.07213, -2.00579, -1.94276, -1.88289, -1.82601, -1.77197, -1.72064, -1.67187, -1.62554, -1.58153, -1.53972, -1.5, -1.46226, -1.42641, -1.39236, -1.36, -1.32927, -1.30007, -1.27233, -1.24598, -1.22094, -1.19716, -1.17457, -1.1531, -1.13271, -1.11334, -1.09494, -1.07746, -1.06085, -1.04507, -1.03008, -1.01584, -1.00231, -0.989462, -0.977254, -0.965656, -0.954638, -0.94417, -0.934226, -0.92478, -0.915805, -0.907279, -0.89918, -0.891485, -0.884176, -0.877231, -0.870634, -0.864367, -0.858413, -0.852757, -0.847384, -0.842279, -0.83743, -0.832823, -0.828446, -0.824288, -0.820338, -0.816586, -0.813021, -0.809634, -0.806417, -0.803361, -0.800457, -0.797699, -0.795079, -0.792589, -0.790224, -0.787977, -0.785843, -0.783815, -0.781889, -0.780059, -0.778321, -0.776669, -0.7751, -0.77361, -0.772194, -0.770849, -0.769571, -0.768357, -0.767203, -0.766108, -0.765067, -0.764078, -0.763138, -0.762246, -0.761398, -0.760593, -0.759828, -0.759101, -0.75841, -0.757754, -0.757131, -0.756539, -0.755976, -0.755442, -0.754935, -0.754452, -0.753994, -0.753559, -0.753146, -0.752753, -0.75238, -0.752025, -0.751688, -0.751368, -0.751065, -0.750776, -0.750502, -0.750241, -0.749993, -0.749758, -0.749535, -0.749323, -0.749121, -0.748929, -0.748747, -0.748575, -0.74841, -0.748254, -0.748106, -0.747965, -0.747832, -0.747704, -0.747584, -0.747469, -0.74736, -0.747257, -0.747158, -0.747065, -0.746976, -0.746892, -0.746812, -0.746736, -0.746663, -0.746595, -0.746529, -0.746467, -0.746409, -0.746353, -0.7463, -0.746249, -0.746201, -0.746156, -0.746112, -0.746071, -0.746032, -0.745995, -0.74596, -0.745926, -0.745894, -0.745864, -0.745835, -0.745808, -0.745782, -0.745758, -0.745734, -0.745712, -0.745691, -0.745671, -0.745652, -0.745634, -0.745617, -0.7456, -0.745585, -0.74557, -0.745556, -0.745543, -0.74553, -0.745518, -0.745507, -0.745496, -0.745486, -0.745476, -0.745466, -0.745458, -0.745449, -0.745441, -0.745434, -0.745427, -0.74542, -0.745413, -0.745407, -0.745401, -0.745396, -0.74539, -0.745385, -0.745381, -0.745376, -0.745372, -0.745368, -0.745364, -0.74536 };
__device__
float const CY_MIN[] = { -0.955675, -0.902237, -0.851472, -0.803244, -0.757429, -0.713903, -0.672554, -0.633273, -0.595955, -0.560504, -0.526825, -0.49483, -0.464435, -0.435559, -0.408127, -0.382068, -0.35731, -0.333791, -0.311447, -0.290222, -0.270057, -0.2509, -0.232702, -0.215413, -0.198988, -0.183385, -0.168562, -0.15448, -0.141102, -0.128394, -0.11632, -0.10485, -0.0939543, -0.0836031, -0.0737684, -0.0644264, -0.0555512, -0.0471205, -0.0391105, -0.031501, -0.0242718, -0.0174047, -0.0108809, -0.00468324, 0.00120477, 0.00679828, 0.0121121, 0.0171603, 0.021956, 0.026512, 0.0308401, 0.0349519, 0.038858, 0.0425689, 0.0460942, 0.0494432, 0.0526248, 0.0556474, 0.0585187, 0.0612465, 0.0638379, 0.0662998, 0.0686385, 0.0708604, 0.0729711, 0.0749763, 0.0768813, 0.078691, 0.0804102, 0.0820433, 0.0835949, 0.0850689, 0.0864693, 0.0877995, 0.0890633, 0.0902639, 0.0914045, 0.092488, 0.0935173, 0.0944952, 0.0954242, 0.0963068, 0.0971451, 0.0979416, 0.0986983, 0.0994172, 0.1001, 0.100749, 0.101365, 0.101951, 0.102507, 0.103035, 0.103537, 0.104014, 0.104467, 0.104898, 0.105306, 0.105695, 0.106064, 0.106414, 0.106747, 0.107064, 0.107364, 0.10765, 0.107921, 0.108179, 0.108424, 0.108656, 0.108877, 0.109087, 0.109286, 0.109476, 0.109656, 0.109827, 0.109989, 0.110143, 0.11029, 0.110429, 0.110562, 0.110687, 0.110807, 0.11092, 0.111028, 0.11113, 0.111227, 0.11132, 0.111408, 0.111491, 0.11157, 0.111645, 0.111717, 0.111785, 0.111849, 0.111911, 0.111969, 0.112024, 0.112077, 0.112127, 0.112174, 0.112219, 0.112262, 0.112302, 0.112341, 0.112378, 0.112413, 0.112446, 0.112477, 0.112507, 0.112536, 0.112563, 0.112588, 0.112612, 0.112636, 0.112658, 0.112678, 0.112698, 0.112717, 0.112735, 0.112752, 0.112768, 0.112783, 0.112798, 0.112812, 0.112825, 0.112838, 0.112849, 0.112861, 0.112871, 0.112882, 0.112891, 0.1129, 0.112909, 0.112917, 0.112925, 0.112933, 0.11294, 0.112947, 0.112953, 0.112959, 0.112965, 0.112971, 0.112976, 0.112981, 0.112985, 0.11299, 0.112994, 0.112998, 0.113002, 0.113006, 0.113009, 0.113012, 0.113016, 0.113019, 0.113021, 0.113024, 0.113027, 0.113029, 0.113031, 0.113033, 0.113036 };
__device__
auto const WIDTH_FACTOR{ WIDTH - 1.0f };
__device__
auto const HEIGHT_FACTOR{ HEIGHT - 1.0f };
__device__
pfc::byte_t const COLORS[] = { 0 ,5 ,10 ,15 ,20 ,25 ,30 ,35 ,40 ,45 ,51 ,56 ,61 ,66 ,71 ,76 ,81 ,86 ,91 ,96 ,102 ,107 ,112 ,117 ,122 ,127 ,132 ,137 ,142 ,147 ,153 ,158 ,163 ,168 ,173 ,178 ,183 ,188 ,193 ,198 ,204 ,209 ,214 ,219 ,224 ,229 ,234 ,239 ,244 ,249 };
__device__
float const ZOOM_FACTORS[] = { 0.95, 0.9025, 0.857375, 0.814506, 0.773781, 0.735092, 0.698337, 0.66342, 0.630249, 0.598737, 0.5688, 0.54036, 0.513342, 0.487675, 0.463291, 0.440127, 0.41812, 0.397214, 0.377353, 0.358486, 0.340562, 0.323533, 0.307357, 0.291989, 0.277389, 0.26352, 0.250344, 0.237827, 0.225935, 0.214639, 0.203907, 0.193711, 0.184026, 0.174825, 0.166083, 0.157779, 0.14989, 0.142396, 0.135276, 0.128512, 0.122086, 0.115982, 0.110183, 0.104674, 0.0994402, 0.0944682, 0.0897448, 0.0852575, 0.0809947, 0.0769449, 0.0730977, 0.0694428, 0.0659707, 0.0626721, 0.0595385, 0.0565616, 0.0537335, 0.0510468, 0.0484945, 0.0460698, 0.0437663, 0.041578, 0.0394991, 0.0375241, 0.0356479, 0.0338655, 0.0321722, 0.0305636, 0.0290354, 0.0275837, 0.0262045, 0.0248943, 0.0236495, 0.0224671, 0.0213437, 0.0202765, 0.0192627, 0.0182996, 0.0173846, 0.0165154, 0.0156896, 0.0149051, 0.0141599, 0.0134519, 0.0127793, 0.0121403, 0.0115333, 0.0109566, 0.0104088, 0.00988835, 0.00939394, 0.00892424, 0.00847803, 0.00805412, 0.00765142, 0.00726885, 0.0069054, 0.00656013, 0.00623213, 0.00592052, 0.00562449, 0.00534327, 0.00507611, 0.0048223, 0.00458119, 0.00435213, 0.00413452, 0.00392779, 0.0037314, 0.00354483, 0.00336759, 0.00319921, 0.00303925, 0.00288729, 0.00274292, 0.00260578, 0.00247549, 0.00235171, 0.00223413, 0.00212242, 0.0020163, 0.00191549, 0.00181971, 0.00172873, 0.00164229, 0.00156018, 0.00148217, 0.00140806, 0.00133766, 0.00127077, 0.00120723, 0.00114687, 0.00108953, 0.00103505, 0.0009833, 0.000934135, 0.000887428, 0.000843056, 0.000800904, 0.000760858, 0.000722815, 0.000686675, 0.000652341, 0.000619724, 0.000588738, 0.000559301, 0.000531336, 0.000504769, 0.00047953, 0.000455554, 0.000432776, 0.000411137, 0.000390581, 0.000371052, 0.000352499, 0.000334874, 0.00031813, 0.000302224, 0.000287113, 0.000272757, 0.000259119, 0.000246163, 0.000233855, 0.000222162, 0.000211054, 0.000200501, 0.000190476, 0.000180952, 0.000171905, 0.00016331, 0.000155144, 0.000147387, 0.000140018, 0.000133017, 0.000126366, 0.000120048, 0.000114045, 0.000108343, 0.000102926, 9.77795e-05, 9.28905e-05, 8.8246e-05, 8.38337e-05, 7.9642e-05, 7.56599e-05, 7.18769e-05, 6.8283e-05, 6.48689e-05, 6.16254e-05, 5.85442e-05, 5.5617e-05, 5.28361e-05, 5.01943e-05, 4.76846e-05, 4.53004e-05, 4.30353e-05, 4.08836e-05, 3.88394e-05, 3.68974e-05, 3.50525e-05 };

// helper functions to generate factors for constants
inline void writeBaseFactors() {
	std::ofstream cx_minf("cx_min.txt");
	std::ofstream cy_minf("cy_min.txt");
	std::ofstream cx_maxf("cx_max.txt");
	std::ofstream cy_maxf("cy_max.txt");
	if (cx_minf.is_open() && cy_minf.is_open() && cx_maxf.is_open() && cy_maxf.is_open())
	{
		cy_maxf << "{";
		cx_maxf << "{";
		cy_minf << "{";
		cx_minf << "{";
		bool init{ true };

		for each (auto const factor in ZOOM_FACTORS)
		{
			cx_minf << (!init ? ", " : "") << (point_x + cx_min_factor * factor);
			cy_minf << (!init ? ", " : "") << (point_y + cy_min_factor * factor);
			cx_maxf << (!init ? ", " : "") << (point_x + cx_max_factor * factor);
			cy_maxf << (!init ? ", " : "") << (point_y + cy_max_factor * factor);

			init = false;
		}
		cy_maxf << "};";
		cx_maxf << "};";
		cy_minf << "};";
		cx_minf << "};";


		cy_maxf.close();
		cx_maxf.close();
		cy_minf.close();
		cx_minf.close();
	}
}

inline void writeMaxMinFactors() {
	std::ofstream cx_f("cx_f.txt");
	std::ofstream cy_f("cy_f.txt");

	if (cx_f.is_open() && cy_f.is_open())
	{
		cx_f << "{";
		cy_f << "{";

		bool init{ true };

		for (int i{ 0 }; i < (sizeof(CX_MAX) / sizeof(float)); ++i)
		{
			cx_f << (!init ? ", " : "") << ((CX_MAX[i] - CX_MIN[i]) / WIDTH_FACTOR);
			cy_f << (!init ? ", " : "") << ((CY_MAX[i] - CY_MIN[i]) / HEIGHT_FACTOR);

			init = false;
		}
		cx_f << "};";
		cy_f << "};";

		cx_f.close();
		cy_f.close();
	}
}
